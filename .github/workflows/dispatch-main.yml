name: Terradatum RETS Client

on:
  workflow_dispatch:
    inputs:
      github-actor:
        description: The GitHub user the dispatch event was fired for
        required: true
        default: ${{ github.actor }}
      ref:
        description: The ref to build from - this is required because workflow_dispatch events MUST fire on the default
          branch, but we can checkout any ref we want once the dispatch fires.
        required: false
        default: main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0 # required for commit analysis - it needs access to full history
          ref: ${{ github.event.inputs.ref }} # required to build/run on non-default branches from workflow_dispatch events

      ## Setup Java and retrieve the version from the pom.xml file
      - name: Setup Java 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Get current version from pom.xml
        uses: terradatum/semver-action@v1
        id: get_version
        with:
          package-manager-type: maven

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic_release
        with:
          semantic_version: 16
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PAT }}

      - name: If SNAPSHOT, set next-snapshot-version in pom.xml
        if: success() && ${{ steps.get_version.outputs.snapshot-release }}
        env:
          NEXT_SNAPSHOT_VERSION: ${{ steps.get_version.outputs.next-snapshot-version }}
        run: |
          mvn -B -U -V \
            -s "${GITHUB_WORKSPACE}"/.github/maven/settings.xml \
            --file "${GITHUB_WORKSPACE}"/pom.xml \
            versions:set -DgenerateBackupPoms=false -DnewVersion=${NEXT_SNAPSHOT_VERSION}
      - name: If SNAPSHOT, commmit and push changes
        if: ${{ steps.get_version.outputs.snapshot-release }}
        env:
          NEXT_SNAPSHOT_VERSION: ${{ steps.get_version.outputs.next-snapshot-version }}
        run: |
          git add .
          git commit -m "Prepare version ${NEXT_SNAPSHOT_VERSION} [skip ci]"
          git push --follow-tags
